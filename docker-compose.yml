version: '3.8'


services:
  db:
    image: postgres:alpine
    container_name: stock_dashboard_psql_db
    volumes:
      - ./pg_data:/var/lib/postgresql/data/pgdata
      - ./db/stock_dashboard/:/docker-entrypoint-initdb.d/
    env_file:
      - .env
    ports:
    - 5432:5432
    healthcheck:
      test: pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT -d $POSTGRES_DB
      interval: 30s
      timeout: 30s
      retries: 500
      start_period: 3m
    restart: on-failure

  rmq:
    image: rabbitmq:3-management
    container_name: stock_dashboard_rmq
    env_file:
      - .env
    volumes:
      - ./rmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    logging:
      driver: none
    ports:
    - 15672:15672
    - 5672:5672
    command: rabbitmq-server
    restart: on-failure

  api:
    build:
      context: .
      dockerfile: api.Dockerfile
    container_name: stock_dashboard_api
    depends_on:
      db:
        condition: service_healthy
      rmq:
        condition: service_healthy
      scheduler:
        condition: service_started
    env_file:
      - .env
    ports:
      - 5000:5000
    restart: on-failure

  scheduler:
    build:
      context: .
      dockerfile: scheduler.Dockerfile
    container_name: stock_dashboard_scheduler
    depends_on:
      db:
        condition: service_healthy
      rmq:
        condition: service_healthy
    links:
      - rmq
    env_file:
      - .env
    environment:
      LOGGING_CONF: /scheduler/utils/logging.conf
    restart: on-failure

  worker:
    build:
      context: .
      dockerfile: worker.Dockerfile
    container_name: stock_dashboard_worker
    depends_on:
      db:
        condition: service_healthy
      rmq:
        condition: service_healthy
    links:
      - rmq
    env_file:
      - .env
    environment:
      LOGGING_CONF: /worker/utils/logging.conf
    restart: on-failure
