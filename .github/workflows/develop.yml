name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [ develop ]
    
  workflow_dispatch:
  # Allows you to run this workflow manually from the Actions tab

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
#     services:
#       rabbitmq:
#         image: rabbitmq:latest
#         ports:
#           - 5672/tcp
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup PostgreSQL
        # You may pin to the exact commit or the version.
        # uses: Harmon758/postgresql-action@0be19fa37850b22cb4c9bbf28a03abbf44abd863
        uses: Harmon758/postgresql-action@v1.0.0
        with:
          # POSTGRES_DB - name for the default database that is created
          postgresql db: postgres # optional, default is 
          # POSTGRES_USER - create the specified user with superuser power
          postgresql user: postgres # optional, default is 
          # POSTGRES_PASSWORD - superuser password
          postgresql password: postgres # optional, default is 
            # Runs a single command using the runners shell
      - uses: getong/rabbitmq-action@v1.2
        with:
          rabbitmq version: '3.8.2-management-alpine'
          rabbitmq user: rabbitmq
          rabbitmq password: password
      - uses: actions/checkout@v2
      - name: Configure DB
        run: |
          psql -U postgres -d postgresql://postgres@localhost/postgres -a -f ./db/stock_dashboard/CREATE_DB.sql
          psql -U postgres -d postgresql://postgres@localhost/postgres -a -f ./db/stock_dashboard/INSERT_DATA.sql
        env:
          PGPASSWORD: postgres
      - name: RabbitMQ
        run: sudo systemctl restart rabbitmq-server
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Tests
        run: pytest
        env:
          PYTHONPATH: .
          LOGGING_CONF: ./stock_dashboard_api/logging.conf
          RABBITMQ_ERLANG_COOKIE: set-cookie
          RABBITMQ_CONNECTION_HOST: localhost
          RABBITMQ_DELIVERY_MODE: 2
          MINCONN: 1
          MAXCONN: 20
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          POSTGRES_PORT: 5432
          POSTGRES_HOST: localhost
          MAIL_PORT: 587
          MAIL_HOST: smtp.googlemail.com
          MAIL_USE_TLS: 1
          MAIL_USERNAME: stockdashboard581@gmail.com
          MAIL_PASSWORD: stockdashboard
          PROD_ROOT: /home/runner/work/StockDashboard/StockDashboard/stock_dashboard_api
          FLASK_SECRET_KEY: ADV2-LKWA-1MG3-90AY-LMNY-AELK
          FLASK_APP: stock_dashboard_api/
          APPLICATION_HOST: http://127.0.0.1:5000/
      - name: Upload coverage data to coveralls.io
        run: coveralls --rcfile=.coveragerc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
  coveralls:
    name: Indicate completion to coveralls.io
    needs: build
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Finished
        run: |
          pip3 install --upgrade coveralls
          coveralls --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
